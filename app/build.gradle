apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.github.thibseisel.mediaxplore"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
			if (project.hasProperty('android.signing.storeFile') 
					&& project.hasProperty('android.signing.keyAlias') 
					&& project.hasProperty('android.signing.storePassword') 
					&& project.hasProperty('android.signing.keyPassword')) {
			
				storeFile file(project.getProperty('android.signing.storeFile'))
				keyAlias project.getProperty('android.signing.keyAlias')
				storePassword project.getProperty('android.signing.storePassword')
				keyPassword project.getProperty('android.signing.keyPassword')
			}
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':csv')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$koroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$koroutines_version"

    implementation "com.android.support:support-v4:$support_version"
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support:design:$support_version"
    implementation "com.android.support.constraint:constraint-layout:$constraint_version"

    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
    implementation "android.arch.lifecycle:common-java8:$lifecycle_version"

    testImplementation "com.google.truth:truth:$truth_version"

    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}
